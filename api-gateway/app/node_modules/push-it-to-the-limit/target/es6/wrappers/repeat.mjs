import createRepeater from '@antongolub/repeater';
import { adapter, dropTimeout } from '../common.mjs';
export const repeat = adapter((fn, opts) => {
    var _a;
    const repeaterOpts = Object.assign(Object.assign({}, opts), { target: fn, delay: typeof opts.delay === 'number' ? opts.delay : opts.delay.period, limit: Array.isArray(opts.limit) ? opts.limit[0].period : (_a = opts.limit) === null || _a === void 0 ? void 0 : _a.period });
    // @ts-ignore
    const repeater = ((createRepeater === null || createRepeater === void 0 ? void 0 : createRepeater.default) || createRepeater)(repeaterOpts);
    repeater.cancel = () => {
        dropTimeout(repeater.timeout);
    };
    repeater.flush = () => {
        fn.call(repeater.context, repeater.args);
        dropTimeout(repeater.timeout);
    };
    return repeater;
});
