import{__decorate as t}from"tslib";import e from"bind-decorator";export{IPromise}from"@qiwi/substrate";function r(){return(r=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var r=arguments[e];for(var s in r)Object.prototype.hasOwnProperty.call(r,s)&&(t[s]=r[s])}return t}).apply(this,arguments)}var s;!function(t){t.PENDING="Pending",t.FULFILLED="Fulfilled",t.REJECTED="Rejected"}(s||(s={}));const i=()=>{},o=(t,e)=>Object.setPrototypeOf(t,e);let n,c,a,l;const h=(t,e)=>new u(t,e);Object.defineProperty(h,"Promise",{get:()=>u.Promise,set(t){o(u.prototype,t.prototype),u.Promise=t}}),n=Symbol.toStringTag,c=Symbol.species,a=Symbol.species,l=Symbol.toStringTag;class u{constructor(t,e){let r,i;this.state=s.PENDING,this.value=void 0,this.reason=void 0,this._resolve=void 0,this._reject=void 0;const o=u.normalizeOpts(t,e),n=o.Promise,c=o.executor;return u.contextify(new n((t,e)=>{r=t,i=e,c(t,e)}),{state:s.PENDING,_P:n,_resolve:r,_reject:i})}get promise(){return this}get status(){return this.state}get result(){return this.isFulfilled()?this.value:this.isRejected()?this.reason:void 0}resolve(t){return this._resolve(t),this}reject(t){return this._reject(t),this}then(t,e){return u.contextify(this,this,"then",t,e)}catch(t){return u.contextify(this,this,"catch",t)}finally(t){return this._P.prototype.finally?u.contextify(this,this,"finally",t):this.then(t).catch(t)}isPending(){return this.state===s.PENDING}isFulfilled(){return this.state===s.FULFILLED}isRejected(){return this.state===s.REJECTED}isResolved(){return!this.isPending()}get[n](){return this.constructor.name}get[c](){return Promise}static get[a](){return Promise}static get[l](){return this.name}static contextify(t,e,r,...s){const i=r?e._P.prototype[r].call(t,...s):t;return Object.assign(o(this.observe(i),this.prototype),e)}static observe(t){const e=t.then(t=>(Object.assign(e,{value:t,state:s.FULFILLED}),t),t=>{throw Object.assign(e,{reason:t,state:s.REJECTED}),t});return e}static normalizeOpts(t,e={}){const s="function"==typeof t?r({},e,{executor:t}):t||e;return r({Promise:u.Promise,executor:i},s)}}u.Promise=Promise,t([e],u.prototype,"resolve",null),t([e],u.prototype,"reject",null),h.Promise=Promise;export{u as InsideOutPromise,s as TPromiseState,h as factory};
//# sourceMappingURL=inside-out-promise.modern.js.map
